<project name="compiling">
    <property name="location.build" location="out/ant-build"/>

    <patternset id="patternset.jarfiles">
        <include name="**/*.jar"/>
    </patternset>

    <path id="kotlin.runtime.classpath">
        <fileset dir="${libs.kotlin}">
            <patternset refid="patternset.jarfiles"/>
        </fileset>
    </path>

    <path id="production.compile.classpath">
        <fileset dir="${libs.runtime.production}">
            <patternset refid="patternset.jarfiles"/>
        </fileset>
    </path>

    <path id="test.compile.classpath">
        <fileset dir="${libs.runtime.test}">
            <patternset refid="patternset.jarfiles"/>
        </fileset>
    </path>

    <target name="build.kotlin" depends="build.lib.kotlin, build.jni.native"/>

    <!-- JNI / Kotlin Code -->

    <property name="build.jni.kotlin.output" location="${location.build}/oidnjni-kotlin"/>

    <path id="build.jni.kotlin.output.path">
        <pathelement location="${build.jni.kotlin.output}"/>
    </path>

    <path id="build.jni.kotlin.classpath">
        <path refid="kotlin.runtime.classpath"/>
        <path refid="production.compile.classpath"/>
    </path>

    <target name="build.jni.kotlin.clean">
        <delete dir="${build.jni.kotlin.output}"/>
    </target>

    <target name="build.jni.kotlin" depends="init">
        <kotlinc
                src="src/main/oidnjni-kotlin"
                output="${build.jni.kotlin.output}"
        />
    </target>

    <!-- JNI Native Code -->

    <property name="build.jni.native.output" location="${location.build}/oidnjni-native"/>

    <condition property="building.on.linux">
        <os family="unix"/>
    </condition>

    <condition property="building.on.mac">
        <os family="mac"/>
    </condition>

    <target name="build.jni.native" depends="build.jni.native.linux, build.jni.native.macos"/>

    <property name="location.build.jni.linux" location="${location.build}/linux/lib"/>

    <target name="build.jni.native.linux" depends="oidnlib.unzip.linux" if="building.on.linux">
        <mkdir dir="${location.build.jni.linux}"/>
        <exec dir="src/main/oidnjni-native" executable="make">
            <env key="JAVA_HOME" value="${java.home}"/>
            <env key="OIDNLIB_VERSION" value="${oidn.lib.version}"/>
            <env key="OIDN_PATH" value="${oidnlib.linux.base}"/>
            <env key="OUTPUT" value="${location.build.jni.linux}"/>
            <arg value="-f"/>
            <arg value="Makefile.linux"/>
        </exec>
    </target>

    <property name="location.build.jni.macos" location="${location.build}/macos/lib"/>

    <target name="build.jni.native.macos" depends="oidnlib.unzip.macos" if="building.on.mac">
        <mkdir dir="${location.build.jni.macos}"/>
        <exec dir="src/main/oidnjni-native" executable="make">
            <env key="JAVA_HOME" value="${java.home}"/>
            <env key="OIDNLIB_VERSION" value="${oidn.lib.version}"/>
            <env key="OIDN_PATH" value="${oidnlib.macos.base}"/>
            <env key="OUTPUT" value="${location.build.jni.macos}"/>
            <arg value="-f"/>
            <arg value="Makefile.macos"/>
        </exec>
    </target>

    <!-- Prod Code -->

    <property name="build.lib.kotlin.output" location="${location.build}/oidn-lib"/>

    <path id="build.lib.kotlin.output.path">
        <pathelement location="${build.lib.kotlin.output}"/>
    </path>

    <path id="build.lib.kotlin.production.classpath">
        <path refid="kotlin.runtime.classpath"/>
        <path refid="build.jni.kotlin.output.path"/>
        <path refid="production.compile.classpath"/>
    </path>

    <target name="build.lib.kotlin" depends="build.jni.kotlin, build.lib.kotlin.production, build.lib.kotlin.test"/>

    <target name="build.lib.kotlin.production" depends="init, build.jni.kotlin">
        <kotlinc
                src="src/main/oidn-lib"
                output="${build.lib.kotlin.output}"
                classpathref="build.lib.kotlin.production.classpath"
        />
    </target>


    <!-- Test Code -->

    <property name="build.lib.kotlin-test.output" location="${location.build}/oidn-lib-test"/>


    <path id="build.lib.kotlin.test.classpath">
        <path refid="kotlin.runtime.classpath"/>
        <path refid="build.jni.kotlin.output.path"/>
        <path refid="build.lib.kotlin.output.path"/>
        <path refid="production.compile.classpath"/>
        <path refid="test.compile.classpath"/>
    </path>

    <target name="build.lib.kotlin.test" depends="init, build.lib.kotlin.production">
        <kotlinc
                src="src/test/oidn-lib"
                output="${build.lib.kotlin-test.output}"
                classpathref="build.lib.kotlin.test.classpath"
        />
    </target>
</project>